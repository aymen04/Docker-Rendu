version: '3.1'



services:
  # Service pour construire l'application React
  react-builder:
    build:
      context: .                   # Le contexte pour le build, ici le répertoire courant
      dockerfile: Dockerfile       # Le nom du fichier Dockerfile à utiliser
    volumes:
      - ./build:/app/build         # Partage le dossier 'build' entre la machine hôte et le conteneur







  # Service pour le serveur HTTP Nginx

  
  nginx:
    restart: always                # Redémarre toujours le conteneur s'il s'arrête
    image: nginx:latest            # Utilise la dernière version de l'image Nginx
    volumes:
      - ./build:/usr/share/nginx/html  # Partage le dossier 'build' avec le dossier HTML de Nginx
      - ./default.conf:/etc/nginx/conf.d/default.conf  # Partage le fichier de configuration Nginx
    ports:
      - "80:80"                    # Mappe le port 80 de la machine hôte au port 80 du conteneur
    depends_on:
      - react-builder              # Dépend du service 'react-builder'
      - backend                    # Dépend du service 'backend'

                   






  # Service pour la base de données MongoDB
  db:
    image: mongo:latest            # Utilise la dernière version de l'image MongoDB
    environment:
      MONGO_INITDB_ROOT_USERNAME: user           # Le nom d'utilisateur pour la base de données
      MONGO_INITDB_ROOT_PASSWORD: projectreact   # Le mot de passe pour la base de données
      MONGO_INITDB_DATABASE: dockerdata          # Le nom de la base de données
    volumes:
      - db-data:/data/db          # Utilise le volume 'db-data' pour stocker les données de manière persistante
    ports:
      - 27017:27017               # Expose le port 27017 pour accéder à la base de données depuis l'hôte
    networks:
      - backlink                  # Utilise le réseau 'backlink'




  # Service pour l'interface web MongoDB Express
  mongo-express:
    image: mongo-express          # Utilise l'image MongoDB Express
    restart: always               # Redémarre toujours le conteneur s'il s'arrête
    ports:
      - 8081:8081                 # Mappe le port 8081 de la machine hôte au port 8081 du conteneur
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: user           # Le nom d'utilisateur pour MongoDB Express
      ME_CONFIG_MONGODB_ADMINPASSWORD: projectreact   # Le mot de passe pour MongoDB Express
      ME_CONFIG_MONGODB_SERVER: db                    # Le nom du serveur MongoDB, doit correspondre au nom du service MongoDB
      ME_CONFIG_BASICAUTH_USERNAME: user              # Le nom d'utilisateur pour l'authentification de base
      ME_CONFIG_BASICAUTH_PASSWORD: projectreact      # Le mot de passe pour l'authentification de base






  # Service pour le backend de l'application
  backend:
    build: ./backend             # Le chemin vers le fichier Dockerfile pour le backend
    volumes:
      - ./backend:/usr/src/app   # Partage le dossier 'backend' entre la machine hôte et le conteneur
      - /usr/src/app/node_modules # Exclut le dossier 'node_modules' du partage
    environment:
      DATABASE_URI: 'mongodb://user:projectreact@db:27017/dockerdata?authSource=admin'  # L'URI pour se connecter à la base de données MongoDB
    depends_on:
      - db                       # Dépend du service 'db'
    networks:
      - backlink                 # Utilise le réseau 'backlink'




volumes:
  # Volume pour stocker les données de la base de données MongoDB de manière persistante
  db-data:



networks:
  # Réseau personnalisé pour permettre la communication entre les conteneurs
  backlink:
